kind: Template
apiVersion: v1
metadata:
  name: deploytemplate-webapp
parameters:
  - name: APP_NAME
    required: true
  - name: IMAGE
    required: true
  - name: STAGE
    required: true
  - name: DATABASE_NAME
    required: true
  - name: HEALTH_URI
    required: true
    value: /
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APP_NAME}
      generation: 1
      labels:
        app: ${APP_NAME}
        stage: ${STAGE}
    spec:
      replicas: 1
      selector:
        app: ${APP_NAME}
        deploymentconfig:  ${APP_NAME}
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deploymentconfig:  ${APP_NAME}
            stage: ${STAGE}
        spec:
          containers:
          - env:
            - name: APP_NAME
              value: ${APP_NAME}
            - name: STAGE
              value: ${STAGE}
            - name: JAVA_OPTS
              value: "-Xmx512M"
            - name: DATABASE_NAME
              value: ${DATABASE_NAME}
            envFrom:
              - secretRef:
                  name: ${APP_NAME}-secret-envvar
              - configMapRef:
                  name: ${APP_NAME}-configmap-envvar
            image: ${IMAGE}
            imagePullPolicy: Always
            name: ${APP_NAME}
            resources:
              limits:
                cpu: 1
                memory: 2Gi
              requests:
                cpu: 200m
                memory: 1Gi
            ports:
              - containerPort: 8080
                protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: ${HEALTH_URI}
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 2
            livenessProbe:
              failureThreshold: 15
              httpGet:
                path: ${HEALTH_URI}
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 5
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /opt/${APP_NAME}/config
                name: ${APP_NAME}-config
                readOnly: true
              - mountPath: /opt/${APP_NAME}/env
                name: ${APP_NAME}-env
                readOnly: true
              - mountPath: /opt/${APP_NAME}/certifikat
                name: ${APP_NAME}-certifikat
                readOnly: true
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: ${APP_NAME}-config
              configMap:
                defaultMode: 420
                name: ${APP_NAME}-config
            - name: ${APP_NAME}-env
              secret:
                defaultMode: 420
                secretName: ${APP_NAME}-env
            - name: ${APP_NAME}-certifikat
              secret:
                defaultMode: 420
                secretName: ${APP_NAME}-certifikat
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP
