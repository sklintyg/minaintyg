<?xml version="1.0"?>
<!--
  ~ Copyright (C) 2016 Inera AB (http://www.inera.se)
  ~
  ~ This file is part of sklintyg (https://github.com/sklintyg).
  ~
  ~ sklintyg is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ sklintyg is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>se.inera.intyg.minaintyg</groupId>
    <artifactId>minaintyg</artifactId>
    <version>3.0.0-b32</version>
  </parent>

  <artifactId>minaintyg-web</artifactId>
  <packaging>war</packaging>

  <name>Mina intyg (Web)</name>

  <properties>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
    <buildTimestamp>${maven.build.timestamp}</buildTimestamp>
    <sonar.javascript.lcov.reportPath>target/karma_coverage/lcov.info</sonar.javascript.lcov.reportPath>
    <sonar.exclusions>**/templates.js,**/vendor/*,**/app.min.js</sonar.exclusions>
  </properties>

  <dependencies>

    <!-- Common -->
    <dependency>
      <groupId>se.inera.intyg.common</groupId>
      <artifactId>common-web</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.common</groupId>
      <artifactId>logging-util</artifactId>
    </dependency>

    <!--Intygstyper -->
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>fk7263</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>ts-bas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>ts-diabetes</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>luse</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>lisu</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>luae_na</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.intygstyper</groupId>
      <artifactId>luae_fs</artifactId>
    </dependency>

    <!-- RIVTA Schemas -->
    <dependency>
      <groupId>se.riv.clinicalprocess.healthcond.certificate</groupId>
      <artifactId>clinicalprocess-healthcond-certificate-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.riv.insuranceprocess.healthreporting</groupId>
      <artifactId>insuranceprocess-healthreporting-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.riv.itintegration.monitoring</groupId>
      <artifactId>itintegration-monitoring-schemas</artifactId>
    </dependency>

    <!-- Intyg Schemas -->
    <dependency>
      <groupId>se.inera.intyg.clinicalprocess.healthcond.certificate</groupId>
      <artifactId>intyg-clinicalprocess-healthcond-certificate-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.insuranceprocess.healthreporting</groupId>
      <artifactId>intyg-insuranceprocess-healthreporting-schemas</artifactId>
    </dependency>
    <dependency>
      <groupId>se.inera.intyg.transportstyrelsen</groupId>
      <artifactId>intyg-transportstyrelsen-schemas</artifactId>
    </dependency>

    <!-- Dependency to Netcare's MVK integration -->
    <dependency>
      <groupId>org.callistasoftware.netcare.commons</groupId>
      <artifactId>mvk-integration</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.geronimo.specs</groupId>
          <artifactId>geronimo-servlet_3.0_spec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Replace netcare-saml with separate dependencies -->
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>openws</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>xmltooling</artifactId>
      <exclusions>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-resolver</groupId>
          <artifactId>xml-resolver</artifactId>
        </exclusion>
        <exclusion>
          <groupId>joda-time</groupId>
          <artifactId>joda-time</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.owasp.esapi</groupId>
      <artifactId>esapi</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.security.extensions</groupId>
      <artifactId>spring-security-saml2-core</artifactId>
    </dependency>

    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
    </dependency>
    <!-- End netcare replacement -->

    <!-- Webjars -->
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>angularjs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>angular-ui-bootstrap</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>angular-ui-router</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
    </dependency>
    <!-- end Webjars -->

    <!-- Logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>
    <!-- end Logging -->

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-taglibs</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>apache-jstl</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <!-- Swagger -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jaxrs</artifactId>
      <version>1.5.4</version>
      <exclusions>
        <exclusion>
          <artifactId>jsr311-api</artifactId>
          <groupId>javax.ws.rs</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--  Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- end Test dependencies -->
  </dependencies>

  <build>
    <finalName>minaintyg</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/version.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/version.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>target/webapp</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <configuration>
          <webAppConfig>
            <contextPath>/</contextPath>
            <resourceBases>
              <resourceBase>${basedir}/src/main/webapp</resourceBase>
              <resourceBase>${basedir}/target/webapp/</resourceBase>
            </resourceBases>
          </webAppConfig>
          <contextXml>${basedir}/src/main/webapp/WEB-INF/jetty-context.xml</contextXml>
          <systemProperties>
            <systemProperty>
              <name>spring.profiles.active</name>
              <value>${system.mode}</value>
            </systemProperty>
            <systemProperty>
              <name>minaintyg.resources.folder</name>
              <value>${basedir}/../src/main/resources</value>
            </systemProperty>
            <systemProperty>
              <name>jetty.port</name>
              <value>8088</value>
            </systemProperty>
            <systemProperty>
              <name>java.awt.headless</name>
              <value>true</value>
            </systemProperty>
            <systemProperty>
              <name>catalina.base</name>
              <value>${project.build.directory}/catalina.base</value>
            </systemProperty>
            <systemProperty>
              <name>credentials.file</name>
              <value>${project.basedir}/minaintyg-credentials.properties</value>
            </systemProperty>
            <systemProperty>
              <name>minaintyg.config.file</name>
              <value>${project.basedir}/minaintyg-dev.properties</value>
            </systemProperty>
            <systemProperty>
              <name>minaintyg.logback.file</name>
              <value>${project.basedir}/minaintyg-logback.xml</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-webjar-dependencies</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>org.webjars,se.inera.intyg.intygstyper,se.inera.intyg.common</includeGroupIds>
              <excludeArtifactIds>common-pom,logging-util</excludeArtifactIds>
              <outputDirectory>${project.build.directory}/webjardependenciestemp</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-test-resources</phase>
            <configuration>
              <target>
                <copy todir="${project.build.directory}/webjardependencies" verbose="false">
                  <regexpmapper from="^(.*)[/\\].*[/\\](.*)$$" to="\1/\2"/>
                  <fileset dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/">
                  </fileset>
                </copy>
                <copy todir="${project.build.directory}/webjardependencies/common" verbose="false">
                  <fileset dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/common">
                  </fileset>
                </copy>
                <copy todir="${project.build.directory}/webjardependencies/fk7263" verbose="false">
                  <fileset dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/fk7263">
                  </fileset>
                </copy>
                <copy todir="${project.build.directory}/webjardependencies/ts-bas" verbose="false">
                  <fileset dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/ts-bas">
                  </fileset>
                </copy>
                <copy todir="${project.build.directory}/webjardependencies/ts-diabetes" verbose="false">
                  <fileset dir="${project.build.directory}/webjardependenciestemp/META-INF/resources/webjars/ts-diabetes">
                  </fileset>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <npmVersion>${npm.version}</npmVersion>
              <nodeDownloadRoot>https://build-inera.nordicmedtest.se/node/</nodeDownloadRoot>
              <npmDownloadRoot>https://build-inera.nordicmedtest.se/node/npm/</npmDownloadRoot>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>grunt build</id>
            <goals>
              <goal>grunt</goal>
            </goals>
          </execution>
          <execution>
            <id>javascript tests</id>
            <goals>
              <goal>karma</goal>
            </goals>
            <configuration>
              <karmaConfPath>${project.basedir}/src/main/resources/karma.conf.ci.js --skip-coverage=${skip-coverage}</karmaConfPath>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
