description = 'Mina intyg (Web)'

apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.moowork.grunt'
apply plugin: 'com.moowork.node'

def webappOutputDir = 'build/apps/'
def webappTestOutputDir = 'build/karma/'

grunt {
    colors = System.properties['gruntColors'] ?: true
}

node {
    version = '6.6.0'
    download = true
    distBaseUrl = 'https://build-inera.nordicmedtest.se/node/'
    workDir = projectDir
    nodeModulesDir = projectDir
}

task jsTests(type: NodeTask, dependsOn: npmInstall) {
    inputs.dir("$projectDir/src/main/resources")
    inputs.dir("$projectDir/src/main/webapp")
    inputs.files(fileTree(projectDir).include('*.js'))
    inputs.files(fileTree(projectDir).include('*.json'))
    inputs.files(configurations.compile)
    outputs.dir(webappTestOutputDir)

    script = file('node_modules/grunt-cli/bin/grunt')
    doFirst {
        args = ['test',
                "--outputDir=${webappTestOutputDir}",
                '--skip-coverage=' + !gradle.taskGraph.allTasks.any{it.name == 'sonarcube'}]
    }
}

test.dependsOn(jsTests)

task jsInclude(type: NodeTask, dependsOn: [npmInstall, unzipBuildTools]) {
    inputs.dir("$projectDir/src/main/resources")
    inputs.dir("$projectDir/src/main/webapp")
    inputs.files(fileTree(projectDir).include('*.js'))
    inputs.files(fileTree(projectDir).include('*.json'))
    inputs.files(configurations.compile)
    outputs.dir(webappOutputDir)

    script = file('node_modules/grunt-cli/bin/grunt')
    args = ['default', "--outputDir=${webappOutputDir}"]
}

war.dependsOn(jsInclude)

war {
    from("${buildDir}/apps")

    exclude '**/*.scss'
    exclude '**/*.spec.js'
    exclude '**/*.test.js'
}

gretty {
    contextPath = '/'
    httpPort = 8088
    scanInterval = 0

    contextConfigFile = file("src/main/webapp/WEB-INF/jetty-context.xml")

    def minified = System.properties['minaintyg.useMinifiedJavaScript'] ?: false

    jvmArgs = [
        "-Dcatalina.base=${buildDir}/catalina.base",
        "-Dspring.profiles.active=dev",
        "-Dminaintyg.resources.folder=${projectDir}/../src/main/resources",
        "-Djetty.port=8088",
        "-Dcredentials.file=${projectDir}/minaintyg-credentials.properties",
        "-Dminaintyg.config.file=${projectDir}/minaintyg-dev.properties",
        "-Dminaintyg.logback.file=${projectDir}/minaintyg-logback.xml",
        "-Dminaintyg.useMinifiedJavaScript=${minified}"
        ]

    extraResourceBase webappOutputDir
}

war.dependsOn createVersionPropertyFile

configurations {
    buildtools
}

dependencies {
    buildtools "se.inera.intyg.common:common-build-tools:${commonVersion}"

    compile "se.riv.itintegration.monitoring:itintegration-monitoring-schemas:1.0.0.3"

    compile "se.inera.intyg.intygstyper:ts-bas:${typerVersion}"
    compile "se.inera.intyg.intygstyper:ts-diabetes:${typerVersion}"
    compile "se.inera.intyg.intygstyper:luse:${typerVersion}"
    compile "se.inera.intyg.intygstyper:lisu:${typerVersion}"
    compile "se.inera.intyg.intygstyper:luae_na:${typerVersion}"
    compile "se.inera.intyg.intygstyper:luae_fs:${typerVersion}"
    compile("se.inera.intyg.intygstyper:fk7263:${typerVersion}") {
        exclude(module: "insuranceprocess-healthreporting-schemas")
        exclude(module: "fk-vardgivare-sjukvard-schemas")
    }

    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"

    compile "org.springframework.security:spring-security-config:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"
    compile "org.springframework.security.extensions:spring-security-saml2-core:1.0.1.RELEASE"

    compile "org.opensaml:openws:1.4.2-1"
    compile "org.aspectj:aspectjweaver:1.7.1"
    compile("org.owasp.esapi:esapi:2.0.1")
    compile("org.opensaml:xmltooling:1.3.2") {
        exclude(module: "xml-apis")
    }
    compile("org.callistasoftware.netcare.commons:mvk-integration:1.3.0") {
        exclude(module: "geronimo-servlet_3.0_spec")
    }
    compile("io.swagger:swagger-jaxrs:1.5.4") {
        exclude(module: "jsr311-api")
    }

    compileOnly "javax.servlet:servlet-api:2.5"
    compileOnly "org.eclipse.jetty:apache-jstl:9.3.6.v20151106"

    testCompile "commons-io:commons-io:2.4"
}
