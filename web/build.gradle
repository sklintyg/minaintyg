description = 'Mina intyg (Web)'

apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.moowork.grunt'
apply plugin: 'com.moowork.node'

grunt {
  colors = true
}

node {
  version = '0.12.4'
  download = true
  distBaseUrl = 'https://build-inera.nordicmedtest.se/node/'
}

// TODO: these still show up in the built war file.
sourceSets {
  main {
    resources {
      exclude '**/*.scss'
      exclude '**/*.spec.js'
      exclude '**/*.test.js'
      exclude '**/karma*.conf.js'
      exclude '**/karma*.conf.ci.js'
    }
  }
}

// TODO: just for now. Pin bootstrap version.
configurations.all {
  resolutionStrategy {
    force 'org.webjars:bootstrap:3.1.1'
  }
}

// TODO: this list should not be required, copy dependencies whose group is org.webjars instead
List webjars = [[group: 'org.webjars', name: 'angularjs', version: '1.4.10'],
                [group: 'org.webjars', name: 'angular-ui-bootstrap', version: '0.12.1'],
                [group: 'org.webjars', name: 'angular-ui-router', version: '0.2.15'],
                [group: 'org.webjars', name: 'bootstrap', version: '3.1.1'],
                [group: 'org.webjars', name: 'momentjs', version: '2.7.0'],
                [group: 'org.webjars', name: 'jquery', version: '1.9.0'],
                [group: 'se.inera.intyg.common', name: 'common-web']]

                task unzipWebjars(type: Copy) {
                  description 'Copies anything that is a webjar from the classpath and expands it so that we can use their static resources with karma'
                  into "$buildDir/webjars/"
                  from {
                    configurations.compile.filter{file ->
                      webjars.any{jar -> file.name.startsWith(jar.name) }
                    }.collect{zipTree(it)}
                  }
                }

                task moveJsFiles(type: Copy, dependsOn: unzipWebjars) {
                  description 'Moves everything up one level, which gets rid of version directory (angular/1.2.4/* -> angular/)'
                  from { "${buildDir}/webjars/META-INF/resources/webjars/" }
                  eachFile {details ->
                    details.path = details.path.replaceAll('([^/]+)/[0-9.]+(/.*)', '$1$2')
                  }
                  into "${buildDir}/webjars"
                }

task jsTests(type: NodeTask, dependsOn: [npmInstall, moveJsFiles]) {
  script = file('node_modules/grunt-cli/bin/grunt')
  args = ['test']
}

test.dependsOn(jsTests)

task jsInclude(type: NodeTask, dependsOn: [npmInstall]) {
  script = file('node_modules/grunt-cli/bin/grunt')
  args = ['default']
}

war.dependsOn(jsInclude)

war {
  from( "${buildDir}/apps" )
}

gretty {
  contextPath = '/'
  httpPort = 8088

  contextConfigFile = file("src/main/webapp/WEB-INF/jetty-context.xml")

  jvmArgs = [
    "-Dcatalina.base=${buildDir}/catalina.base",
    "-Dspring.profiles.active=dev",
    "-Dminaintyg.resources.folder=${projectDir}/../src/main/resources",
    "-Djetty.port=8088",
    "-Dcredentials.file=${projectDir}/minaintyg-credentials.properties",
    "-Dminaintyg.config.file=${projectDir}/minaintyg-dev.properties",
    "-Dminaintyg.logback.file=${projectDir}/minaintyg-logback.xml",
    "-Dminaintyg.useMinifiedJavaScript=false"
  ]

  
  // TODO: b√§ttre namn. Synka med gruntfilen.
  extraResourceBase 'build/apps/'

  // TODO: use?
  //   debugSuspend = false
  //   recompileOnSourceChange = false
  //   reloadOnClassChange = false
  //   reloadOnConfigChange = false
  //   reloadOnLibChange = false
}

// TODO: buildNumber must be taken from environment
task createVersionPropertyFile(dependsOn: processResources) << {
  def propertyFile = "${buildDir}/resources/main/version.properties"
  ant.touch(file: propertyFile, mkdirs: "true")
  ant.propertyfile(file: propertyFile) {
    entry(key: 'project.version', default: rootProject.version)
    entry(key: 'buildTime', default: new Date())
    entry(key: 'buildNumber', default: '6a25a6bf58687fd2a9250e413ae8050cfe534c3f')
  }
}

war.dependsOn createVersionPropertyFile

buildscript {
  repositories {
    jcenter()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }

  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
    classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
    classpath 'com.moowork.gradle:gradle-grunt-plugin:0.12'
  }
}

dependencies {
  compile 'se.inera.intyg.common:common-web:0-SNAPSHOT'
  compile 'se.inera.intyg.common:logging-util:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:ts-bas:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:ts-diabetes:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:luse:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:lisu:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:luae_na:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:luae_fs:0-SNAPSHOT'
  compile 'se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:2.0.RC5.1'
  compile 'se.riv.insuranceprocess.healthreporting:insuranceprocess-healthreporting-schemas:3.1.0.1'
  compile 'se.riv.itintegration.monitoring:itintegration-monitoring-schemas:1.0.0.1'
  compile 'se.inera.intyg.clinicalprocess.healthcond.certificate:intyg-clinicalprocess-healthcond-certificate-schemas:1.0.1'
  compile 'se.inera.intyg.insuranceprocess.healthreporting:intyg-insuranceprocess-healthreporting-schemas:1.0.1'
  compile 'se.inera.intyg.transportstyrelsen:intyg-transportstyrelsen-schemas:1.0.1'
  compile 'org.opensaml:openws:1.4.2-1'
  compile 'org.springframework.security.extensions:spring-security-saml2-core:1.0.1.RELEASE'
  compile 'xml-apis:xml-apis:1.4.01'
  compile 'org.webjars:angularjs:1.4.10'
  compile 'org.webjars:angular-ui-bootstrap:1.3.2'
  compile 'org.webjars:angular-ui-router:0.2.15'
  compile 'org.webjars:bootstrap:3.1.1'
  compile 'ch.qos.logback:logback-classic:1.0.11'
  compile 'org.slf4j:slf4j-api:1.7.5'
  compile 'org.slf4j:jcl-over-slf4j:1.7.5'
  compile 'org.slf4j:log4j-over-slf4j:1.7.5'
  compile 'org.apache.cxf:cxf-rt-transports-http:3.1.3'
  compile 'org.apache.cxf:cxf-rt-frontend-jaxrs:3.1.3'
  compile 'org.aspectj:aspectjrt:1.7.1'
  compile 'org.aspectj:aspectjweaver:1.7.1'
  compile 'org.springframework:spring-context:4.2.2.RELEASE'
  compile 'org.springframework:spring-web:4.2.2.RELEASE'
  compile 'org.springframework:spring-webmvc:4.2.2.RELEASE'
  compile 'com.google.guava:guava:14.0.1'
  compile (group: 'se.inera.intyg.intygstyper', name: 'fk7263', version: '0-SNAPSHOT') {
    exclude(module: 'insuranceprocess-healthreporting-schemas')
    exclude(module: 'fk-vardgivare-sjukvard-schemas')
  }
  compile(group: 'org.callistasoftware.netcare.commons', name: 'mvk-integration', version:'1.3.0') {
    exclude(module: 'geronimo-servlet_3.0_spec')
  }
  compile(group: 'org.opensaml', name: 'xmltooling', version:'1.3.2') {
    exclude(module: 'xercesImpl')
    exclude(module: 'xml-apis')
    exclude(module: 'xml-resolver')
    exclude(module: 'joda-time')
  }
  compile(group: 'org.owasp.esapi', name: 'esapi', version:'2.0.1') {
    exclude(module: 'log4j')
    exclude(module: 'commons-logging')
  }
  compile(group: 'org.springframework', name: 'spring-aop', version:'4.2.2.RELEASE') {
    exclude(module: 'commons-logging')
  }
  compile(group: 'org.springframework.security', name: 'spring-security-config', version:'4.0.3.RELEASE') {
    exclude(module: 'spring-core')
    exclude(module: 'spring-aop')
    exclude(module: 'spring-beans')
  }
  compile(group: 'org.springframework.security', name: 'spring-security-web', version:'4.0.3.RELEASE') {
    exclude(module: 'spring-expression')
    exclude(module: 'spring-aop')
    exclude(module: 'spring-jdbc')
    exclude(module: 'spring-core')
    exclude(module: 'spring-beans')
    exclude(module: 'spring-tx')
  }
  compile(group: 'org.springframework.security', name: 'spring-security-taglibs', version:'4.0.3.RELEASE') {
    exclude(module: 'spring-core')
    exclude(module: 'spring-aop')
    exclude(module: 'spring-beans')
    exclude(module: 'spring-expression')
    exclude(module: 'spring-jdbc')
    exclude(module: 'spring-tx')
  }
  compile(group: 'io.swagger', name: 'swagger-jaxrs', version:'1.5.4') {
    exclude(module: 'jsr311-api')
  }

  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:1.9.0'
  testCompile 'commons-io:commons-io:2.4'

  providedCompile 'javax.servlet:servlet-api:2.5'
  providedCompile 'org.eclipse.jetty:apache-jstl:9.3.6.v20151106'
}
