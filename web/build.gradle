description = 'Mina intyg (Web)'

apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.moowork.grunt'
apply plugin: 'com.moowork.node'

def webappOutputDir = 'build/apps/';
def webappTestOutputDir = 'build/karma/';

grunt {
  colors = true
}

node {
  version = '0.12.4'
  download = true
  distBaseUrl = 'https://build-inera.nordicmedtest.se/node/'
}

// TODO: these still show up in the built war file.
sourceSets {
  main {
    resources {
      exclude '**/*.scss'
      exclude '**/*.spec.js'
      exclude '**/*.test.js'
      exclude '**/karma*.conf.js'
      exclude '**/karma*.conf.ci.js'
    }
  }
}

// TODO: just for now. Pin bootstrap version.
configurations.all {
  resolutionStrategy {
    force 'org.webjars:bootstrap:3.1.1'
  }
}

// TODO: this list should not be required, copy dependencies whose group is org.webjars instead
List webjars = [[group: 'org.webjars', name: 'angularjs', version: '1.4.10'],
                [group: 'org.webjars', name: 'angular-ui-bootstrap', version: '0.12.1'],
                [group: 'org.webjars', name: 'angular-ui-router', version: '0.2.15'],
                [group: 'org.webjars', name: 'bootstrap', version: '3.1.1'],
                [group: 'org.webjars', name: 'momentjs', version: '2.7.0'],
                [group: 'org.webjars', name: 'jquery', version: '1.9.0'],
                [group: 'se.inera.intyg.common', name: 'common-web']]

task unzipWebjars(type: Copy) {
  description 'Copies anything that is a webjar from the classpath and expands it so that we can use their static resources with karma'
  into "$buildDir/webjars/"
  from {
    configurations.compile.filter{file ->
      webjars.any{jar -> file.name.startsWith(jar.name) }
    }.collect{zipTree(it)}
  }
}

task moveJsFiles(type: Copy, dependsOn: unzipWebjars) {
  description 'Moves everything up one level, which gets rid of version directory (angular/1.2.4/* -> angular/)'
  from { "${buildDir}/webjars/META-INF/resources/webjars/" }
  eachFile {details ->
    details.path = details.path.replaceAll('([^/]+)/[0-9.]+(/.*)', '$1$2')
  }
  into "${buildDir}/webjars"
}

task jsTests(type: NodeTask, dependsOn: [npmInstall, moveJsFiles]) {
  script = file('node_modules/grunt-cli/bin/grunt')
  args = ['test', '--outputDir=' + webappTestOutputDir, '--skip-coverage='+(!project.hasProperty('runSonar'))]
}

test.dependsOn(jsTests)

task jsInclude(type: NodeTask, dependsOn: [npmInstall, unzipBuildTools]) {
  script = file('node_modules/grunt-cli/bin/grunt')
  args = ['default', '--outputDir=' + webappOutputDir]
}

war.dependsOn(jsInclude)

war {
  from( "${buildDir}/apps" )
}

gretty {
  contextPath = '/'
  httpPort = 8088
  scanInterval = 0
  
  contextConfigFile = file("src/main/webapp/WEB-INF/jetty-context.xml")

  def useMinifiedJavaScript = false;
  if (System.properties['minaintyg.useMinifiedJavaScript'] != null) {
    useMinifiedJavaScript = System.properties['minaintyg.useMinifiedJavaScript'];
  }

  jvmArgs = [
    "-Dcatalina.base=${buildDir}/catalina.base",
    "-Dspring.profiles.active=dev",
    "-Dminaintyg.resources.folder=${projectDir}/../src/main/resources",
    "-Djetty.port=8088",
    "-Dcredentials.file=${projectDir}/minaintyg-credentials.properties",
    "-Dminaintyg.config.file=${projectDir}/minaintyg-dev.properties",
    "-Dminaintyg.logback.file=${projectDir}/minaintyg-logback.xml",
    "-Dminaintyg.useMinifiedJavaScript=" + useMinifiedJavaScript
  ]

  extraResourceBase webappOutputDir

  // TODO: use?
  //   debugSuspend = false
  //   recompileOnSourceChange = false
  //   reloadOnClassChange = false
  //   reloadOnConfigChange = false
  //   reloadOnLibChange = false
}

war.dependsOn createVersionPropertyFile

configurations {
  buildtools
}

buildscript {
  repositories {
    jcenter()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }

  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
    classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
    classpath 'com.moowork.gradle:gradle-grunt-plugin:0.12'
  }
}

dependencies {
  buildtools "se.inera.intyg.common:common-build-tools:${commonVersion}"

  compile "se.riv.itintegration.monitoring:itintegration-monitoring-schemas:1.0.0.1"

  compile "se.inera.intyg.intygstyper:ts-bas:${typerVersion}"
  compile "se.inera.intyg.intygstyper:ts-diabetes:${typerVersion}"
  compile "se.inera.intyg.intygstyper:luse:${typerVersion}"
  compile "se.inera.intyg.intygstyper:lisu:${typerVersion}"
  compile "se.inera.intyg.intygstyper:luae_na:${typerVersion}"
  compile "se.inera.intyg.intygstyper:luae_fs:${typerVersion}"
  compile (group: "se.inera.intyg.intygstyper", name: "fk7263", version: "${typerVersion}") {
    exclude(module: "insuranceprocess-healthreporting-schemas")
    exclude(module: "fk-vardgivare-sjukvard-schemas")
  }

  compile "org.springframework:spring-web:${springVersion}"
  compile "org.springframework:spring-webmvc:${springVersion}"

  compile "org.springframework.security:spring-security-config:${springSecurityVersion}"
  compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
  compile "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"
  compile "org.springframework.security.extensions:spring-security-saml2-core:1.0.1.RELEASE"

  compile "org.opensaml:openws:1.4.2-1"
  compile "org.aspectj:aspectjweaver:1.7.1"
  compile(group: "org.owasp.esapi", name: "esapi", version:"2.0.1")
  compile(group: "org.opensaml", name: "xmltooling", version:"1.3.2") {
    exclude(module: "xml-apis")
  }
  compile(group: "org.callistasoftware.netcare.commons", name: "mvk-integration", version:"1.3.0") {
    exclude(module: "geronimo-servlet_3.0_spec")
  }
  compile(group: "io.swagger", name: "swagger-jaxrs", version:"1.5.4") {
    exclude(module: "jsr311-api")
  }

  testCompile "commons-io:commons-io:2.4"

  providedCompile "javax.servlet:servlet-api:2.5"
  providedCompile "org.eclipse.jetty:apache-jstl:9.3.6.v20151106"
}
