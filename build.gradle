plugins {
    alias(libs.plugins.org.springframework.boot)
    alias(libs.plugins.org.sonarqube)
    alias(libs.plugins.org.owasp.dependencycheck)
    alias(libs.plugins.com.github.ben.manes.versions)
    id 'test-report-aggregation'
    id 'application'
}

ext {
    intygBomVersion = System.properties['intygBomVersion'] ?: '0.0.1-SNAPSHOT'

    ineraMavenRepository = 'https://nexus.drift.inera.se/repository/it-public/'
    shibbolethMavenRepository = 'https://build.shibboleth.net/nexus/content/repositories/releases/'

    nvdMirror = 'https://vulnz-nvd-mirror-devtest.intyg.nordicmedtest.se'
}

application {
    mainClassName = 'se.inera.intyg.minaintyg.MinaintygApplication'
}

group = 'se.inera.intyg.minaintyg'
version = System.properties['buildVersion'] ?: '4.1.0-SNAPSHOT'

apply from: 'gradle/configureIntygBom.gradle'

allprojects {
    repositories {
        mavenLocal()
        maven { url = ineraMavenRepository }
        maven { url = shibbolethMavenRepository }
        mavenCentral()
    }
}

dependencyCheck {
    formats = List.of("HTML", "JSON")

    nvd {
        datafeedUrl = "${nvdMirror}"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    java {
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation platform("se.inera.intyg.bom:platform:${intygBomVersion}")
        annotationProcessor platform("se.inera.intyg.bom:platform:${intygBomVersion}")
        testImplementation platform("se.inera.intyg.bom:platform:${intygBomVersion}")
        testAnnotationProcessor platform("se.inera.intyg.bom:platform:${intygBomVersion}")
    }

    jacocoTestReport {
        dependsOn test

        reports {
            xml.required = true
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        "**/testability/**",
                        "**/integrationtest/**",
                ])
            }))
        }
    }

    sonar {
        properties {
            property "sonar.projectKey", "intyg-minaintyg"
            property "sonar.projectName", "intyg-minaintyg"
            property "sonar.dependencyCheck.htmlReportPath", "${layout.buildDirectory}/reports/dependency-check-report.html"
            property "sonar.dependencyCheck.jsonReportPath", "${layout.buildDirectory}/reports/dependency-check-report.json"
            property "sonar.exclusions", "**/integration/api/**/*,**/testability/**,**/dto/**/*,**/integrationtest/**"
        }
    }

    tasks.withType(Test).configureEach {
        jvmArgs '-Xshare:off'
    }
}

reporting {
    reports {
        integrationTestAggregateTestReport(AggregateTestReport) {
            testSuiteName = 'integrationTest'
        }
    }

    dependencies {
        testReportAggregation project(':app')
        testReportAggregation project(':integration-api')
        testReportAggregation project(':integration-intyg-proxy-service')
        testReportAggregation project(':integration-intygsadmin')
        testReportAggregation project(':integration-intygstjanst')
        testReportAggregation project(':integration-test')
        testReportAggregation project(':integration-webcert')
        testReportAggregation project(':logging')
    }
}
