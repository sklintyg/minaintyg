ext {
    commonVersion = System.properties['commonVersion'] ?: '0-SNAPSHOT'
    typerVersion = System.properties['typerVersion'] ?: '0-SNAPSHOT'

    intygInsuranceprocessSchemasVersion = "1.0.4"
    rivtaItintegrationMonitoringSchemasVersion = "1.0.0.4"

    apacheJstlVersion = "9.3.6.v20151106"
    aspectJWeaverVersion = "1.7.1"
    esapiVersion = "2.0.1"
    jaxrsVersion = "1.5.4"
    mvkIntegrationVersion = "1.3.0"
    openWsVersion = "1.4.2-1"
    seleniumVersion = "2.52.0"
    servletApiVersion = "2.5"
    springSecuritySaml2CoreVersion = "1.0.1.RELEASE"
    springSecurityVersion = "4.0.3.RELEASE"
    springVersion = "4.2.2.RELEASE"
    xmlToolingVersion = "1.3.2"
    
    mockitoVersion = "1.9.0"
}

allprojects {
    group = 'se.inera.intyg.minaintyg'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    apply plugin: 'inera-intyg'
    apply plugin: 'maven'
    apply plugin: 'org.ajoberstar.grgit'
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task createVersionPropertyFile(type: VersionPropertyFileTask) {
        useBuildTime = true
    }

    task unzipBuildTools(type: Copy) {
        description 'Extracts common-build-tools'
        into "$buildDir/build-tools/"
        from {
            configurations.buildtools.collect { zipTree(it) }
        }
    }

    apply plugin: 'checkstyle'

    checkstyle {
        config = resources.text.fromFile("${buildDir}/build-tools/checkstyle/checkstyle.xml")
        ignoreFailures = false
        showViolations = true
    }

    checkstyleMain.onlyIf { project.hasProperty('codeQuality') }
    checkstyleMain.dependsOn unzipBuildTools
    checkstyleMain.source = "src/main/java"
    checkstyleTest.enabled = false

    apply plugin: 'jacoco'

    jacoco {
        toolVersion = "0.7.6.201602180812"
    }

    test {
        jacoco {
            destinationFile = file("$buildDir/jacoco/test.exec")
        }
    }

    uploadArchives.repositories.mavenDeployer {
        repository(url: "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases") {
            authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
        }
    }

    [install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
        pom.dependencies.findAll {dep -> dep.groupId == 'se.inera.intyg.common'}.each {
            it.version = findResolvedVersion(project, 'se.inera.intyg.common')
        }
        pom.dependencies.findAll {dep -> dep.groupId == 'se.inera.intyg.intygstyper'}.each {
            it.version = findResolvedVersion(project, 'se.inera.intyg.intygstyper')
        }
    }

    configurations {
        buildtools
    }

    dependencies {
        buildtools "se.inera.intyg.common:common-build-tools:${commonVersion}"

        testCompile 'junit:junit:4.+'
        testCompile "org.mockito:mockito-core:${mockitoVersion}"
    }

    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }
}

task tagRelease(type: TagReleaseTask)
                      
task testReport(type: SharedTestReportTask)

apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property "sonar.jacoco.reportPath", "$buildDir/jacoco/test.exec"
        property "sonar.projectName", "Mina intyg"
        property "sonar.projectKey", "mina-intyg"
        property "sonar.host.url", System.properties['sonarUrl'] ?: "https://build-inera.nordicmedtest.se/sonar"
        property "sonar.test.exclusions", "src/test/**"
        property "sonar.exclusions", ["**/stub/**", "**/exception/**", "**/*Exception*.java", "**/templates.js", "**/vendor/**"]
        property "sonar.javascript.lcov.reportPath", "build/karma/lcov.info"
    }
}

buildscript {
    dependencies {
        classpath 'se.inera.intyg:gradle-intyg-plugin:1.0.+'
        classpath 'se.inera.intyg:gradle-fitnesse-plugin:1.0.+'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.+"
        classpath 'org.ajoberstar:gradle-git:1.+'
        classpath 'org.akhikhl.gretty:gretty:+'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.+'
        classpath 'com.moowork.gradle:gradle-grunt-plugin:0.+'
    }

    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}
