description = 'Mina intyg (FitNesse)'

apply plugin: 'groovy'
apply plugin: 'inera-fitnesse'

fitnesse {
    port = 9124
    root = "FitNesseRoot"
    workingDir = "src/test/fitnesse"
    wikiStartPage = "MinaIntyg.AutomatiseradeTester"

    if (project.hasProperty('fileOutput')) {
        outputFormat = project.hasProperty('outputFormat') ? project.getProperty('outputFormat') : "xml&includehtml"
    }

    extraProperties = [
            'fitnesse.working'       : "src/test/fitnesse",
            'geb.env'                : System.properties['geb.env'] ?: "chrome",
            'certificate.baseUrl'    : System.properties['certificate.baseUrl'] ?: "http://localhost:8080/inera-certificate/",
            'certificate.web.baseUrl': System.properties['web.baseUrl'] ?: "http://localhost:8088/web/"
    ]
}

sonarqube {
    skipProject = true
}

dependencies {
    def seleniumVersion = "2.52.0"

    compile project(":minaintyg-web")

    compile "se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:2.0.RC6.1"
    compile "se.riv.insuranceprocess.healthreporting:insuranceprocess-healthreporting-schemas:3.1.0.3"
    compile 'se.riv.itintegration.monitoring:itintegration-monitoring-schemas:1.0.0.3'

    compile "se.inera.intyg.common:log-messages:${commonVersion}"
    compile "se.inera.intyg.common:hsa-integration:${commonVersion}"
    compile "se.inera.intyg.common:common-specifications:${commonVersion}"

    fitnesse "se.inera.intyg.common:common-specifications:${commonVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-support:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-safari-driver:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-remote-driver:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-htmlunit-driver:${seleniumVersion}"
}
